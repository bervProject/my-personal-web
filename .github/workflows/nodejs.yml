name: Node CI
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
env:
  IMAGE_NAME: my-personal-web
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Yarn Install
        run: yarn --frozen-lockfile
      - name: Build
        run: yarn build
      - uses: actions/upload-artifact@v3
        if: ${{ github.event_name == 'push' }}
        with:
          name: deployment
          path: dist/*
  test:
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Yarn Install
      run: yarn --frozen-lockfile
    - name: Lint
      run: yarn lint
    - name: Unit Test
      run: yarn test:unit
    - name: E2E Test
      run: yarn test:e2e --headless
    - uses: actions/upload-artifact@v3
      if: ${{ matrix.node-version == '16.x' }}
      with:
        name: test-videos
        path: test/e2e/videos/*
  publish:
    runs-on: ubuntu-20.04
    needs: build
    if: ${{ github.event_name == 'push' }}
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: deployment
        path: ./dist
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        force_orphan: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
  docker-build:
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: docker build . --file Dockerfile
  push:
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            berviantoleo/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
